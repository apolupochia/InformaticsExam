//
//  MobileHelperTasksCell2.swift
//  informatics
//
//  Created by Алёша Виноградов on 30.08.2023.
//

import SwiftUI

struct MobileHelperTasksCell2: View {
    var body: some View {
        ScrollView(.vertical, showsIndicators: false) {
            VStack(alignment : .center){
                Text("№ 2")
                    .font(.title)
                    .padding(.top)
             
                task()
                solvingTask()
                
                
               
            }
        }
    }
    
    func task() -> some View{
        VStack{
            Text("Миша заполнял таблицу истинности логической функции F\n¬ (y → x) ∨ (z → w) ∨ ¬z,\nно успел заполнить лишь фрагмент из трёх различных её строк, даже не указав, какому столбцу таблицы соответствует каждая из переменных w, x, y, z.")
             //   .multilineTextAlignment(.center)
                .padding()
            TaskImagesForMobileHelper(numberOfTask: "2.1")
            
            Text("Определите, какому столбцу таблицы соответствует каждая из переменных w, x, y, z.\nВ ответе напишите буквы w, x, y, z в том порядке, в котором идут соответствующие им столбцы (сначала буква, соответствующая первому столбцу; затем буква, соответствующая второму столбцу, и т. д.). Буквы в ответе пишите подряд, никаких разделителей между буквами ставить не нужно.\nПример. Функция F задана выражением ¬ x ∨ y, зависящим от двух переменных, а фрагмент таблицы имеет следующий вид")
            
                .padding()
            TaskImagesForMobileHelper(numberOfTask: "2.2")
            Text("В этом случае первому столбцу соответствует переменная y, а второму столбцу  — переменная x. В ответе следует написать: yx.")
                .padding()
        }
    }
    
    func solvingTask() -> some View{
        VStack{
            Text("Решение")
                .font(.title2)
            Text("Програмное решение")
                .font(.title3)
            Text("Составим таблицу истинности для выражения ¬ (y → x) ∨ (z → w) ∨ ¬z при помощи языка Python:\n\nprint('x y z w')\nfor x in range(0, 2):\n for y in range(0, 2):\n  for z in range(0, 2):\n   for w in range(0, 2):\n    if (not (y <= x) or (z <= w) or not z) == 0:\n      print(x, y, z, w)\n\nПолучим следующие наборы:\n(0, 0, 1, 0)\n(1, 0, 1, 0)\n(1, 1, 1, 0)\nСопоставим эти наборы с приведенным в задании фрагментом таблицы истинности.\nЗаметим, что переменная z может принимать только значение 1, значит, переменная z соответствует третьему столбцу таблицы истинности. Переменная w может принимать только значение 0, значит, переменная w соответствует четвёртому столбцу таблицы истинности.\nТогда вторая строка может соответствовать только набору (1, 0, 1, 0), следовательно, переменная x соответствует второму столбцу таблицы истинности, а переменная y соответствует первому столбцу таблицы истинности.")
                .padding(.vertical)
            Text("Логическое решение")
                .font(.title3)
            Text("(удобно комбинировать с програмным)")
                .font(.title3)
                
                
            Text("В тоблице написано, что результат функции должен быть = 0\nТогда (¬ (y → x) ∨ (z → w) ∨ ¬z) = 0, с учетом логического сложения ∨ можно разделить по слагаемым:\n¬(y → x) = 0\n(z → w) = 0\n¬z = 0\nЧтобы ¬z = 0, то z должно быть = 1, а для этого подходит 3 столбец тк он единственный подходяший.\nПосмотрим на (z → w), зная что z = 1 и чтобы скобка была = 1, то w и z должно быть равно 0 и 1, а значит w - 4 столбец.\n¬(y → x) здесь не должно быть случая где y = 1 и x = 0. У нас остались столбцы 1 и 2 и во 2 строке во втором столбце 1, а в первом 0 и в этом случае если y и x будет во 2 и 1 столбце - то будет ошибка, а значит остается вариант где y - 1 столбец, а x - 2 столбец.\nТогда ответ - yxzw")
                .padding(.vertical)
        }
        .padding(.horizontal)
    }
}

struct MobileHelperTasksCell2_Previews: PreviewProvider {
    static var previews: some View {
        MobileHelperTasksCell2()
    }
}
